#include <iostream>
#include <fstream>
#include <string>
#include <direct.h>
#include "DBMeta.cpp"
using namespace std;

class DBHandler
{
private:
	string db_savePath;
public:
	//默认的存储路径 
	DBHandler()
	{	
		db_savePath = "C:/Users/1/Desktop/MyDatabase/";
		mkdir(db_savePath.c_str());  //建立总库文件夹 
	}
		
	//创建库 
	void create(string databaseName)
	{		
		//为数据库建立文件夹，c_str()用于将string转成const char* 
    	if(!mkdir((db_savePath+databaseName).c_str()))
    	{
    		//更新meta信息 
			DBMeta dbmeta;
			dbmeta.save(databaseName);
			//为新库生成tableMeta文件 
    		ofstream out(db_savePath+databaseName+"/tableMeta.json");
    		out.close();
		}
		else
		{
			cout<<"this database already exists."<<endl;;
		}
		
//		TableMeta TM(databaseName);
//		TM.save("Log"); //生成log文件 
	}
	
	//打开指定库，若不存在则创建 
//	void open(string databaseName)
//	{
//		//path = 从meta里面获得库的地址；
//		//TableMeta meta(path);  
//	}
	 
	//删除指定库 
	void drop(string databaseName)
	{
		string path = db_savePath + databaseName;
		string command = "rd /s /q ";
		command += "\"" + path + "\"";
		if(!system(command.c_str()))
		{
			DBMeta dbmeta;
			dbmeta.drop(databaseName);
			cout<<"delete successfully!"<<endl;	
		}
		else
		{
			cout<<"fail to delete!"<<endl;
		}
	}
	
	//查看所有库名 
	void getDBMeta()
	{
		DBMeta dbmeta;
		dbmeta.load(); 
	}
	
};

 
